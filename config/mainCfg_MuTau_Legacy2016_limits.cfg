[general]

lumi = 35922 # pb^-1 full 2016

outputFolder = analysis_24Dec2020_limits/MuTau_2016

data = DsingleMuB, DsingleMuC, DsingleMuD, DsingleMuE, DsingleMuF, DsingleMuG, DsingleMuH

signals = GGHH_NLO_cHHH0_xs, GGHH_NLO_cHHH1_xs, GGHH_NLO_cHHH2p45_xs, GGHH_NLO_cHHH5_xs, VBFHH_CV_1_C2V_1_C3_1_xs, VBFHH_CV_0p5_C2V_1_C3_1_xs, VBFHH_CV_1p5_C2V_1_C3_1_xs, VBFHH_CV_1_C2V_1_C3_0_xs, VBFHH_CV_1_C2V_1_C3_2_xs, VBFHH_CV_1_C2V_2_C3_1_xs, VBFHH_CV_1_C2V_0_C3_1_xs

backgrounds = TTfullyHad, TTfullyLep, TTsemiLep, DY_0b_1Pt, DY_0b_2Pt, DY_0b_3Pt, DY_0b_4Pt, DY_0b_5Pt, DY_0b_6Pt, DY_1b_1Pt, DY_1b_2Pt, DY_1b_3Pt, DY_1b_4Pt, DY_1b_5Pt, DY_1b_6Pt, DY_2b_1Pt, DY_2b_2Pt, DY_2b_3Pt, DY_2b_4Pt, DY_2b_5Pt, DY_2b_6Pt, DY_LM, WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf, TWtop, TWantitop, singleTop_top, singleTop_antitop, EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, WWTo2L2Nu, WWTo4Q, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, ZZTo4L, ZZTo4Q, ZH_HBB_ZLL, ZH_HBB_ZQQ, ZH_HTauTau, ggHTauTau, VBFHTauTau, WplusHTauTau, WminusHTauTau, ttHJetTononBB, ttHJetToBB, WWW, WWZ, WZZ, ZZZ, TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu, TTWW, TTWZ, TTZZ

variables = DNNoutSM_kl_1
#, DNNoutSM_kl_1_tauup_DM0, DNNoutSM_kl_1_taudown_DM0, DNNoutSM_kl_1_tauup_DM1, DNNoutSM_kl_1_taudown_DM1, DNNoutSM_kl_1_tauup_DM10, DNNoutSM_kl_1_taudown_DM10, DNNoutSM_kl_1_tauup_DM11, DNNoutSM_kl_1_taudown_DM11, DNNoutSM_kl_1_eleup_DM0, DNNoutSM_kl_1_eledown_DM0, DNNoutSM_kl_1_eleup_DM1, DNNoutSM_kl_1_eledown_DM1, DNNoutSM_kl_1_muup, DNNoutSM_kl_1_mudown, DNNoutSM_kl_1_jetupTot, DNNoutSM_kl_1_jetdownTot, DNNoutSM_kl_1_jetup1, DNNoutSM_kl_1_jetup2, DNNoutSM_kl_1_jetup3, DNNoutSM_kl_1_jetup4, DNNoutSM_kl_1_jetup5, DNNoutSM_kl_1_jetup6, DNNoutSM_kl_1_jetup7, DNNoutSM_kl_1_jetup8, DNNoutSM_kl_1_jetup9, DNNoutSM_kl_1_jetup10, DNNoutSM_kl_1_jetup11, DNNoutSM_kl_1_jetdown1, DNNoutSM_kl_1_jetdown2, DNNoutSM_kl_1_jetdown3, DNNoutSM_kl_1_jetdown4, DNNoutSM_kl_1_jetdown5, DNNoutSM_kl_1_jetdown6, DNNoutSM_kl_1_jetdown7, DNNoutSM_kl_1_jetdown8, DNNoutSM_kl_1_jetdown9, DNNoutSM_kl_1_jetdown10, DNNoutSM_kl_1_jetdown11

selections = s1b1jresolvedMcut, s2b0jresolvedMcut, sboostedLLMcut, GGFclass, VBFclass, ttHclass, TTclass, DYclass

regions    = SR, SStight, OSinviso, SSinviso


[configs]

sampleCfg = config/sampleCfg_Legacy2016.cfg
cutCfg    = config/selectionCfg_MuTau_Legacy2016.cfg
pattern   = goodsystfiles  # use this only when running on systematics files


[merge]
# plotting
#DY      = DY_HM, DY_LM
#TT      = TTfullyHad, TTfullyLep, TTsemiLep
#singleH = ZH_HBB_ZLL, ZH_HBB_ZQQ, ZH_HTauTau, WplusHTauTau, WminusHTauTau, ttHJetTononBB, ttHJetToBB, ggHTauTau, VBFHTauTau
#other   = WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf, EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, singleTop_top, singleTop_antitop, TWtop, TWantitop, WWTo2L2Nu, WWTo4Q, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, ZZTo4L, ZZTo4Q, TTZZ, TTWW, TTWZ, TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu, WWW, WWZ, WZZ, ZZZ
#totBkg = TTfullyHad, TTfullyLep, TTsemiLep, DY_HM, DY_LM, WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf, TWtop, TWantitop, singleTop_top, singleTop_antitop, EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, WWTo2L2Nu, WWTo4Q, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, ZZTo4L, ZZTo4Q, ZH_HBB_ZLL, ZH_HBB_ZQQ, ZH_HTauTau, ggHTauTau, VBFHTauTau, WplusHTauTau, WminusHTauTau, ttHJetTononBB, ttHJetToBB, WWW, WWZ, WZZ, ZZZ, TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu, TTWW, TTWZ, TTZZ

# For limits
TT        = TTfullyHad, TTfullyLep, TTsemiLep
W         = WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf
EWK       = EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL
singleT   = singleTop_top, singleTop_antitop
TW        = TWtop, TWantitop
ZH        = ZH_HBB_ZLL, ZH_HBB_ZQQ, ZH_HTauTau
WH        = WplusHTauTau, WminusHTauTau
VV        = WWTo2L2Nu, WWTo4Q, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, ZZTo4L, ZZTo4Q
ttH       = ttHJetTononBB, ttHJetToBB
TTX       = TTZZ, TTWW, TTWZ, TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu
ggH       = ggHTauTau
VBFH      = VBFHTauTau
VVV       = WWW, WWZ, WZZ, ZZZ

data_obs  = DsingleMuB, DsingleMuC, DsingleMuD, DsingleMuE, DsingleMuF, DsingleMuG, DsingleMuH


############################################################################################
############################################################################################
# the following lines are used for postprocessing (pp_), i.e. not read from AnalysisHelper
# but used in subsequent steps of the analysis to combine histos, compute QCD etc..
# we keep them here to have everything at hand

[pp_merge]


## in case some histos must be rebinned. Pass as
## uniqueid = varToRebin , condition, newBinning
# [pp_rebin]
# r1 = HHKin_mass_raw         , sboostedLLMcut , 250, 1000 # a unique, big bin
# r2 = HHKin_mass_raw_tauup   , sboostedLLMcut , 250, 1000 # a unique, big bin
# r3 = HHKin_mass_raw_taudown , sboostedLLMcut , 250, 1000 # a unique, big bin
# r4 = HHKin_mass_raw_jetup   , sboostedLLMcut , 250, 1000 # a unique, big bin
# r5 = HHKin_mass_raw_jetdown , sboostedLLMcut , 250, 1000 # a unique, big bin
# 
# r6  = MT2         , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r7  = MT2_tauup   , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r8  = MT2_taudown , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r9  = MT2_jetup   , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r10 = MT2_jetdown , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal

## parameters for QCD evaluation
## doFitIf : condition to be respected to make rlx-to-tight QCD fit. It is used as eval(doFitIf). Use names sel, var


[pp_QCD]
#for normal QCD
#QCDname      = QCD
#SR           = SR
#yieldSB      = SStight
#shapeSB      = SSrlx
#SBtoSRfactor = 1
#regionD      = SSinviso
#regionC      = OSinviso
#doFitIf      = False
#fitFunc      = [0] + [1]*x


#for inverted QCD
QCDname      = QCD
SR           = SR
yieldSB      = OSinviso
shapeSB      = OSinviso
SBtoSRfactor = 1
doFitIf      = False
fitFunc      = [0] + [1]*x
regionC      = SStight
regionD      = SSinviso
doUnc        = True
classSBtoSR  = 0.142


[bTagRfactor]
#central                         = 1.013 # Pisa
central                          = 1.0081
#bTagweightReshape_lf_up         = 1.1114
#bTagweightReshape_hf_up         = 0.9142
#bTagweightReshape_hfstats1_up   = 0.9050
#bTagweightReshape_hfstats2_up   = 0.9166
#bTagweightReshape_lfstats1_up   = 0.9464
#bTagweightReshape_lfstats2_up   = 0.9408
#bTagweightReshape_cferr1_up     = 0.9169
#bTagweightReshape_cferr2_up     = 0.9181
#bTagweightReshape_lf_down       = 0.7802
#bTagweightReshape_hf_down       = 0.9435
#bTagweightReshape_hfstats1_down = 0.9536
#bTagweightReshape_hfstats2_down = 0.9416
#bTagweightReshape_lfstats1_down = 0.9117
#bTagweightReshape_lfstats2_down = 0.9171
#bTagweightReshape_cferr1_down   = 0.9503
#bTagweightReshape_cferr2_down   = 0.9447
