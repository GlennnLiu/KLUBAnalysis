[general]

lumi = 35922 # pb^-1
# the lumi in fb^-1 is used only by the plotting program
# approximate to only one decimal digit
lumi_fb = 35.9 # fb^-1

outputFolder = /home/llr/cms/motta/CMSSW_11_1_0_pre6/src/KLUBAnalysis/MY_ttCRlimits_2016inclusive/ETau/

data = DsingleEleB, DsingleEleC, DsingleEleD, DsingleEleE, DsingleEleF, DsingleEleG, DsingleEleH

signals = GGHH_NLO_cHHH1_xs

backgrounds = TTfullyHad, TTfullyLep, TTsemiLep, DY_0b_1Pt, DY_0b_2Pt, DY_0b_3Pt, DY_0b_4Pt, DY_0b_5Pt, DY_0b_6Pt, DY_1b_1Pt, DY_1b_2Pt, DY_1b_3Pt, DY_1b_4Pt, DY_1b_5Pt, DY_1b_6Pt, DY_2b_1Pt, DY_2b_2Pt, DY_2b_3Pt, DY_2b_4Pt, DY_2b_5Pt, DY_2b_6Pt, DY_LM, WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf, TWtop, TWantitop, singleTop_top, singleTop_antitop, EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, WWTo2L2Nu, WWTo4Q, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, ZZTo4L, ZZTo4Q, ZH_HBB_ZLL, ZH_HBB_ZQQ, ZH_HTauTau, ggHTauTau, VBFHTauTau, WplusHTauTau, WminusHTauTau, ttHJetTononBB, ttHJetToBB, WWW, WWZ, WZZ, ZZZ, TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu, TTWW, TTWZ, TTZZ

variables = bH_mass

selections = ttCR_invMcut

regions    = SR, SStight, OSinviso, SSinviso

[configs]
sampleCfg = config/sampleCfg_Legacy2016.cfg
cutCfg    = config/selectionCfg_ETau_Legacy2016.cfg
# pattern   = goodsystfiles 

[merge]
# For limits
TT        = TTfullyHad, TTfullyLep, TTsemiLep
W         = WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf
EWK       = EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL
singleT   = singleTop_top, singleTop_antitop
TW        = TWtop, TWantitop
ZH        = ZH_HBB_ZLL, ZH_HBB_ZQQ, ZH_HTauTau
WH        = WplusHTauTau, WminusHTauTau
VV        = WWTo2L2Nu, WWTo4Q, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, ZZTo4L, ZZTo4Q
ttH       = ttHJetTononBB, ttHJetToBB
TTX       = TTZZ, TTWW, TTWZ, TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu
ggH       = ggHTauTau
VBFH      = VBFHTauTau
VVV       = WWW, WWZ, WZZ, ZZZ

data_obs  = DsingleEleB, DsingleEleC, DsingleEleD, DsingleEleE, DsingleEleF, DsingleEleG, DsingleEleH


############################################################################################
############################################################################################
## parameters for QCD evaluation
## doFitIf : condition to be respected to make rlx-to-tight QCD fit. It is used as eval(doFitIf). Use names sel, var

[pp_QCD]
#for normal QCD
#QCDname      = QCD
#SR           = SR
#yieldSB      = SStight
#shapeSB      = SSrlx
#SBtoSRfactor = 1
#regionD      = SSinviso
#regionC      = OSinviso
#doFitIf      = False
#fitFunc      = [0] + [1]*x


#for inverted QCD
QCDname      = QCD
SR           = SR
yieldSB      = OSinviso
shapeSB      = OSinviso
SBtoSRfactor = 1
doFitIf      = False
fitFunc      = [0] + [1]*x
regionC      = SStight
regionD      = SSinviso


[bTagRfactor]
central                         = 1.0120
bTagweightReshape_jes_up        = 0.9664
bTagweightReshape_lf_up         = 1.1869
bTagweightReshape_hf_up         = 0.9821
bTagweightReshape_hfstats1_up   = 0.9734
bTagweightReshape_hfstats2_up   = 0.9910
bTagweightReshape_lfstats1_up   = 1.0168
bTagweightReshape_lfstats2_up   = 1.0098
bTagweightReshape_cferr1_up     = 0.9887
bTagweightReshape_cferr2_up     = 0.9904
bTagweightReshape_jes_down      = 1.0262
bTagweightReshape_lf_down       = 0.8461
bTagweightReshape_hf_down       = 1.0175
bTagweightReshape_hfstats1_down = 1.0270
bTagweightReshape_hfstats2_down = 1.0089
bTagweightReshape_lfstats1_down = 0.9831
bTagweightReshape_lfstats2_down = 0.9899
bTagweightReshape_cferr1_down   = 1.0184
bTagweightReshape_cferr2_down   = 1.0127

############################################################################################
############################################################################################
## rebinning part
## r0 = variable, selection, ...new_bins_edges...
[pp_rebin]
r0 = bH_mass, ttCR_invMcut, 0.0, 33.333333333333336, 183.33333333333334, 350.0, 500.00000000000006


