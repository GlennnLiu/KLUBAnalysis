[general]

lumi = 59741 # pb^-1
# the lumi in fb^-1 is used only by the plotting program
# approximate to only one decimal digit
lumi_fb = 60.0 # fb^-1

outputFolder = analysis_TauTau_2018_27Nov2020_limits

data = DTauA, DTauB, DTauC, DTauD

signals = GGHH_NLO_cHHH0_xs, GGHH_NLO_cHHH1_xs, GGHH_NLO_cHHH2p45_xs, GGHH_NLO_cHHH5_xs, VBFHH_CV_1_C2V_1_C3_1_xs, VBFHH_CV_0p5_C2V_1_C3_1_xs, VBFHH_CV_1p5_C2V_1_C3_1_xs, VBFHH_CV_1_C2V_1_C3_0_xs, VBFHH_CV_1_C2V_1_C3_2_xs, VBFHH_CV_1_C2V_2_C3_1_xs, VBFHH_CV_1_C2V_0_C3_1_xs

backgrounds = TTfullyHad, TTfullyLep, TTsemiLep, WJets_HT_0_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf, EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, TWtop, TWantitop, singleTop_top, singleTop_antitop, ZH_HBB_ZQQ, ZH_HBB_ZLL, ZH_HTauTau, WplusHTauTau, WminusHTauTau, WWTo2L2Nu, WWTo4Q, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, ZZTo4L, ttHJetTononBB, ttHJetToBB, ttHJetToTauTau, ZZZ, WWW, WWZ, WZZ, TTWW, TTWZ, TTZZ, TTWH, TTZH, TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu, TTZToQQ, ggHTauTau, VBFHTauTau, DY_0b_1Pt, DY_0b_2Pt, DY_0b_3Pt, DY_0b_4Pt, DY_0b_5Pt, DY_0b_6Pt, DY_1b_1Pt, DY_1b_2Pt, DY_1b_3Pt, DY_1b_4Pt, DY_1b_5Pt, DY_1b_6Pt, DY_2b_1Pt, DY_2b_2Pt, DY_2b_3Pt, DY_2b_4Pt, DY_2b_5Pt, DY_2b_6Pt, DY_LM
#backgrounds = TTfullyHad, TTfullyLep, TTsemiLep, WJets_HT_0_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf, EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, TWtop, TWantitop, singleTop_top, singleTop_antitop, ZH_HBB_ZQQ, ZH_HBB_ZLL, ZH_HTauTau, WplusHTauTau, WminusHTauTau, WWTo2L2Nu, WWTo4Q, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, ZZTo4L, ttHJetTononBB, ttHJetToBB, ttHJetToTauTau, ZZZ, WWW, WWZ, WZZ, TTWW, TTWZ, TTZZ, TTWH, TTZH, TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu, TTZToQQ, ggHTauTau, VBFHTauTau, DY_HM, DY_LM

variables = DNNoutSM_kl_1 #, DNNoutSM_kl_1_tauup_DM0, DNNoutSM_kl_1_taudown_DM0, DNNoutSM_kl_1_tauup_DM1, DNNoutSM_kl_1_taudown_DM1, DNNoutSM_kl_1_tauup_DM10, DNNoutSM_kl_1_taudown_DM10, DNNoutSM_kl_1_tauup_DM11, DNNoutSM_kl_1_taudown_DM11, DNNoutSM_kl_1_eleup_DM0, DNNoutSM_kl_1_eledown_DM0, DNNoutSM_kl_1_eleup_DM1, DNNoutSM_kl_1_eledown_DM1, DNNoutSM_kl_1_muup, DNNoutSM_kl_1_mudown, DNNoutSM_kl_1_jetupTot, DNNoutSM_kl_1_jetdownTot

#selections = s1b1jresolvedMcut, s2b0jresolvedMcut, sboostedLLMcut, GGFclass, VBFclass, ttHclass, TTlepclass, TThadclass, DYclass #, VBFloose
selections = s1b1jresolvedMcut, s2b0jresolvedMcut, sboostedLLMcut, GGFclass, VBFclass, ttHclass, TTclass, DYclass

regions    = SR, SStight, OSinviso, SSinviso


[configs]
sampleCfg = config/sampleCfg_Legacy2018_mib.cfg
cutCfg    = config/selectionCfg_TauTau_Legacy2018.cfg
pattern   = goodsystfiles


[merge]
# plots
#DY      = DY_HM, DY_LM
#TT      = TTfullyHad, TTfullyLep, TTsemiLep
#singleH = ZH_HBB_ZLL, ZH_HTauTau, ZH_HBB_ZQQ, WplusHTauTau, WminusHTauTau, ttHJetTononBB, ttHJetToBB, ttHJetToTauTau, TTWH, TTZH, ggHTauTau, VBFHTauTau
#other   = WJets_HT_0_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf, EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, singleTop_top, singleTop_antitop, TWtop, TWantitop, WWTo2L2Nu, WWTo4Q, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, ZZTo4L, TTZZ, TTWW, TTWZ, TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu, TTZToQQ, WWW, WWZ, WZZ, ZZZ

#limits
TT      = TTfullyHad, TTfullyLep, TTsemiLep
W       = WJets_HT_0_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf
EWK     = EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL
singleT = singleTop_top, singleTop_antitop
TW      = TWtop, TWantitop
ZH      = ZH_HBB_ZLL, ZH_HTauTau, ZH_HBB_ZQQ
WH      = WplusHTauTau, WminusHTauTau
VV      = WWTo2L2Nu, WWTo4Q, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, ZZTo4L
ttH     = ttHJetTononBB, ttHJetToBB, ttHJetToTauTau
TTX     = TTZZ, TTWW, TTWZ, TTWH, TTZH, TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu, TTZToQQ
ggH     = ggHTauTau
VBFH    = VBFHTauTau
VVV     = WWW, WWZ, WZZ, ZZZ

data_obs = DTauA, DTauB, DTauC, DTauD


############################################################################################
############################################################################################
# the following lines are used for postprocessing (pp_), i.e. not read from AnalysisHelper
# but used in subsequent steps of the analysis to combine histos, compute QCD etc..
# we keep them here to have everything at hand

[pp_merge]


## in case some histos must be rebinned. Pass as
## uniqueid = varToRebin , condition, newBinning
# [pp_rebin]
# r1 = HHKin_mass_raw         , sboostedLLMcut , 250, 1000 # a unique, big bin
# r2 = HHKin_mass_raw_tauup   , sboostedLLMcut , 250, 1000 # a unique, big bin
# r3 = HHKin_mass_raw_taudown , sboostedLLMcut , 250, 1000 # a unique, big bin
# r4 = HHKin_mass_raw_jetup   , sboostedLLMcut , 250, 1000 # a unique, big bin
# r5 = HHKin_mass_raw_jetdown , sboostedLLMcut , 250, 1000 # a unique, big bin
#
# r6  = MT2         , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r7  = MT2_tauup   , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r8  = MT2_taudown , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r9  = MT2_jetup   , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r10 = MT2_jetdown , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal

## parameters for QCD evaluation
## doFitIf : condition to be respected to make rlx-to-tight QCD fit. It is used as eval(doFitIf). Use names sel, var


[pp_QCD]
#QCDname      = QCD
#SR           = SR
#yieldSB      = SStight
#shapeSB      = SSrlx
#SBtoSRfactor = 1
#regionD = SSinviso
#regionC = OSinviso
#doFitIf      = False
#fitFunc      = [0] + [1]*x


#for inverted QCD
QCDname      = QCD
SR           = SR
yieldSB      = OSinviso
shapeSB      = OSinviso
SBtoSRfactor = 1
doFitIf      = False
fitFunc      = [0] + [1]*x
regionC      = SStight
regionD      = SSinviso
doUnc        = True


[bTagRfactor]
#central                          = 0.9795
#central                         = 0.9419
#bTagweightReshape_jes_up        = 1.6308
#bTagweightReshape_lf_up         = 2.1271
#bTagweightReshape_hf_up         = 1.7568
#bTagweightReshape_hfstats1_up   = 1.7589
#bTagweightReshape_hfstats2_up   = 1.7749
#bTagweightReshape_lfstats1_up   = 1.8232
#bTagweightReshape_lfstats2_up   = 1.8111
#bTagweightReshape_cferr1_up     = 1.7472
#bTagweightReshape_cferr2_up     = 1.7513
#bTagweightReshape_jes_down      = 1.9412
#bTagweightReshape_lf_down       = 1.5083
#bTagweightReshape_hf_down       = 1.8277
#bTagweightReshape_hfstats1_down = 1.8260
#bTagweightReshape_hfstats2_down = 1.8097
#bTagweightReshape_lfstats1_down = 1.7612
#bTagweightReshape_lfstats2_down = 1.7732
#bTagweightReshape_cferr1_down   = 1.8767
#bTagweightReshape_cferr2_down   = 1.8531
